{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","catch","err","console","log","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,kBAAO,SAAAC,GACf,OAAQ,qBAAKC,UAAU,+BAAf,SACJ,sBAAKA,UAAU,uBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAC1B,6BAAKL,EAAMI,QAAQE,OAC5B,4BAAIN,EAAMI,QAAQG,eCLLC,EAAW,SAAAR,GACxB,OAAO,qBAAKC,UAAU,UAAf,SAEMD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJtBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACCC,KAAK,SACLb,UAAU,SACVW,YAAaA,EACbG,SAAUF,MCgDAG,E,kDAlDb,aAAc,IAAD,8BACX,gBAuBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAtBtC,EAAKC,MAAQ,CACZb,SAAY,GACZU,YAAc,IALJ,E,gEAWO,IAAD,OACfI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OACbA,EAASC,UAETF,MAAK,SAAAG,GACJ,EAAKT,SAAS,CAACT,SAAWkB,OAE3BC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q,+BAQT,IAAD,EAC2BG,KAAKV,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YAEXc,EAAmBxB,EAASyB,QAAO,SAAA9B,GAAO,OAC9CA,EAAQE,KAAK6B,cAAcC,SAASjB,EAAYgB,kBAGlD,OACM,sBAAKlC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAcmB,KAAKnB,eAGnB,cAAC,EAAD,CAAUJ,SAAUwB,W,GA5CdI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f6d17555.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => {\r\n     return  <div className=\"col-sm-4 col-lg-3 p-3 d-flex\">\r\n         <div className=\"card-container w-100\">\r\n             <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n         <h2>{props.monster.name}</h2>\r\n<p>{props.monster.email}</p>\r\n         </div>\r\n     </div>\r\n}","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = props => {\r\nreturn <div className=\"row p-3\">\r\n          {\r\n             props.monsters.map(monster =>\r\n                <Card key={monster.id} monster={monster}></Card>\r\n\r\n               )\r\n           }\r\n\r\n</div>\r\n}","import React from 'react';\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n     type=\"search\"\r\n     className=\"search\"\r\n     placeholder={placeholder}\r\n     onChange={handleChange}>\r\n    </input>\r\n)","import React, {Component} from 'react';\nimport './App.css';\n\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n \nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n     monsters  : [],\n     searchField : \"\"\n    }\n\n   \n  }\n\n  componentDidMount(){\n      fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => \n       response.json()\n      )\n      .then(users => {\n        this.setState({monsters : users})\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField : e.target.value})\n  }\n\n  render(){\n    const {monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n\n    return(\n          <div className=\"App\">\n            <h1>Monster Rolodex</h1>\n            <SearchBox \n            placeholder=\"Search monsters\"\n            handleChange={this.handleChange}>\n            </SearchBox>\n\n            <CardList monsters={filteredMonsters} >\n           </CardList>\n          </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}